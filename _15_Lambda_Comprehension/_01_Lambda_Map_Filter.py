"""
>> What are Lambda functions in Python?

- Lambda Functions in Python are anonymous functions, implying they don't have a name.
- The def keyword is needed to create a normal function in Python, as we already know.
- We can also use the lambda keyword in Python to define an unnamed function.
- Lambda functions are limited to a single statement.

>> Syntax of Python Lambda Function

lambda arguments: expression

>> Need for Lambda Functions : There are at least 3 reasons:

1. Lambda functions reduce the number of lines of code when compared to normal python function defined using def keyword.
2. They are generally used when a function is needed temporarily for a short period of time, often to be used inside another function such as filter, map and reduce.
3. Using lambda function, you can define a function and call it immediately at the end of definition. This canâ€™t be done with def functions.

"""

# An example of a lambda function that adds 44 to the input number is shown below.

add = lambda num: num + 44
print(add(6))  # 50

"""
- It generates a function object associated with the "add" identifier. 
"""


# The lambda statement, "lambda num: num+44", is nearly the same as:

def add(num):
    return num + 44


print(add(6))  # 50

"""
>> What's the Distinction Between Lambda and Def Functions?

- Normal functions are defined using the def keyword, 
  anonymous functions are defined using the lambda keyword.
  
- Internally, both lambda and def functions works exactly the same. 

- Lambda functions can have 0 or 1 expression, not more.
"""

"""
>> Lambda Function with filter()

- The filter() method accepts two arguments in Python: a function and an iterable such as a list.

- The function is called for every item of the list, and a new iterable or list is returned 
  that holds just those elements that returned True when supplied to the function.
"""

# Using the filter() method to return only odd numbers from a list.

list_ = [34, 12, 64, 55, 75, 13, 63]

odd_list = filter(lambda num: (num % 2 != 0), list_)

print(list(odd_list))  # [55, 75, 13, 63]

"""
>> Lambda Function with map()

- A method and a list are passed to Python's map() function.

- The function is executed for all of the elements within the list, 
  and a new list is produced with elements generated by the given function for every item.
"""

# map() method is used to square all the entries in a list

numbers_list = [2, 4, 5, 1, 3, 7, 8, 9, 10]
squared_list = list(map(lambda num: num ** 2, numbers_list))

print(squared_list)  # [4, 16, 25, 1, 9, 49, 64, 81, 100]